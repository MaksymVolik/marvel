{"version":3,"file":"static/js/519.979f4aa3.chunk.js","mappings":"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","sources":["Components/errorBoundary/ErrorBoundary.js","Components/errorMessage/ErrorMessage.js","Components/pages/CharacterPage.js","Components/singlePage/SinglePage.js","Components/spinner/Spinner.js","services/MarvelService.js","hooks/http.hook.js"],"sourcesContent":["// Предохранитель (Error Boundary)\r\n\r\nimport { Component } from \"react\";\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nclass ErrorBoundary extends Component {\r\n\r\n    state = {\r\n        hasError: false\r\n    }\r\n\r\n    static getDerivedStateFromError() {\r\n        // Обновите состояние так, чтобы следующий рендер показал запасной интерфейс.\r\n        return { hasError: true }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        console.log(error, info)\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            // Здесь можно рендерить запасной интерфейс\r\n            return <ErrorMessage />\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import img from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto' }} src={img} alt=\"Error message\" />\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import SinglePage from \"../singlePage/SinglePage\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\n\r\nexport function Component() {\r\n    return (\r\n        <>\r\n            <AppBanner />\r\n            <ErrorBoundary>\r\n                <SinglePage page=\"character\" />\r\n            </ErrorBoundary>\r\n        </>\r\n    )\r\n}\r\n\r\nComponent.displayName = \"CharacterPage\";","import { useParams, useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './singlePage.scss';\n\nconst SinglePage = (props) => {\n    const { id } = useParams();\n    const [item, setItem] = useState(null);\n\n    const { loading, error, clearError, getComic, getCharacter } = useMarvelService();\n\n    useEffect(() => {\n        updateItem();\n    }, [id])\n\n    const updateItem = () => {\n        clearError();\n\n        if (props.page === 'comic') {\n            getComic(id)\n                .then(onItemLoaded);\n        } else if (props.page === 'character') {\n            getCharacter(id)\n                .then(onItemLoaded);\n        }\n    }\n\n    const onItemLoaded = (item) => {\n        setItem(item);\n    }\n\n    const renderPage = props.page === \"comic\"\n        ? <SingleComic item={item} />\n        : props.page === \"character\"\n            ? <SingleChar item={item} />\n            : null\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = !(loading || error || !item) ? renderPage : null;\n\n    return (\n        <div style={{ 'marginTop': '50px' }}>\n            {errorMessage}\n            {spinner}\n            {content}\n        </div>\n    )\n}\n\nconst SingleComic = ({ item }) => {\n    let navigate = useNavigate();\n\n    const { title, description, pageCount, thumbnail, language, price } = item;\n\n    return (\n        <div className=\"single-comic\">\n            <Helmet>\n                <title>{title}</title>\n                <meta name=\"description\" content={`${title} comics book`} />\n            </Helmet>\n            <img src={thumbnail} alt={title} className=\"single-comic__img\" />\n            <div className=\"single-comic__info\">\n                <h2 className=\"single-comic__name\">{title}</h2>\n                <p className=\"single-comic__descr\">{description}</p>\n                <p className=\"single-comic__descr\">{pageCount}</p>\n                <p className=\"single-comic__descr\">Language: {language}</p>\n                <div className=\"single-comic__price\">{price}</div>\n            </div>\n            <div onClick={() => navigate(-1)} className=\"single-comic__back\">Go back</div>\n        </div>\n    )\n}\n\nconst SingleChar = ({ item }) => {\n    const { name, description, thumbnail } = item;\n\n    return (\n        <div className=\"single-comic\">\n            <Helmet>\n                <title>{name}</title>\n                <meta name=\"description\" content={`${name} information page`} />\n            </Helmet>\n            <img src={thumbnail} alt={name} className=\"single-comic__imgChar\" />\n            <div className=\"single-comic__info\">\n                <h2 className=\"single-comic__name\">{name}</h2>\n                <p className=\"single-comic__descr\">{description}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default SinglePage;","const Spinner = (props) => {\r\n    return (\r\n        <svg style={{ margin: `${props.margin}`, background: 'none', display: 'block' }} width={props.size} height={props.size} viewBox=\"0 0 128 128\" space=\"preserve\">\r\n            <path fill=\"#9f0013\" d=\"M64.4 16a49 49 0 0 0-50 48 51 51 0 0 0 50 52.2 53 53 0 0 0 54-52c-.7-48-45-55.7-45-55.7s45.3 3.8 49 55.6c.8 32-24.8 59.5-58 60.2-33 .8-61.4-25.7-62-60C1.3 29.8 28.8.6 64.3 0c0 0 8.5 0 8.7 8.4 0 8-8.6 7.6-8.6 7.6z\">\r\n                <animateTransform attributeName=\"transform\" type=\"rotate\" from=\"0 64 64\" to=\"360 64 64\" dur=\"1800ms\" repeatCount=\"indefinite\"></animateTransform>\r\n            </path>\r\n        </svg>\r\n    )\r\n}\r\nSpinner.defaultProps = { size: \"64px\", margin: '0 auto' };\r\n\r\nexport default Spinner;","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n    const { loading, error, clearError, request } = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=4f2080802c14be696101f97dc9e2bd5f';\r\n    const _baseOffset = 210;\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformAllCharacters);\r\n    }\r\n\r\n    const getCharacterByName = async (name) => {\r\n        const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`)\r\n        return res.data.results.map(_transformAllCharacters);\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`)\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const getAllComics = async (offset = 0) => {\r\n        const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformComics);\r\n    }\r\n\r\n    const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n        return _transformComics(res.data.results[0]);\r\n    };\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description\r\n                ? `${char.description.slice(0, 210)}...`\r\n                : 'There is no description for this character',\r\n            thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const _transformAllCharacters = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension\r\n        }\r\n    }\r\n\r\n    const _transformComics = (comics) => {\r\n        return {\r\n            id: comics.id,\r\n            title: comics.title,\r\n            description: comics.description || \"There is no description\",\r\n            thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n            pageCount: comics.pageCount\r\n                ? `${comics.pageCount} pages`\r\n                : \"No information about the number of pages\",\r\n            language: comics.textObjects[0]?.language || \"en-us\",\r\n            // optional chaining operator\r\n            price: comics.prices[0].price\r\n                ? `${comics.prices[0].price}$`\r\n                : \"not available\",\r\n        }\r\n    }\r\n\r\n    return {\r\n        loading,\r\n        error,\r\n        clearError,\r\n        getAllCharacters,\r\n        getCharacter,\r\n        getCharacterByName,\r\n        getAllComics,\r\n        getComic\r\n    }\r\n\r\n}\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = { 'Content-Type': 'application/json' }) => {\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await fetch(url, { method, body, headers });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n            setLoading(false);\r\n            return data;\r\n        } catch (e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => { setError(null) }, []);\r\n\r\n    return { loading, error, request, clearError };\r\n}"],"names":["ErrorBoundary","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","hasError","_createClass","key","value","error","info","console","log","this","_jsx","ErrorMessage","props","children","Component","style","display","width","height","objectFit","margin","src","img","alt","_jsxs","_Fragment","AppBanner","SinglePage","page","displayName","SingleComic","_ref","item","navigate","useNavigate","title","description","pageCount","thumbnail","language","price","className","Helmet","name","content","onClick","SingleChar","_ref2","id","useParams","_useState","useState","_useState2","_slicedToArray","setItem","_useMarvelService","useMarvelService","loading","clearError","getComic","getCharacter","useEffect","updateItem","then","onItemLoaded","renderPage","errorMessage","spinner","Spinner","background","size","viewBox","space","fill","d","attributeName","type","from","to","dur","repeatCount","defaultProps","_useHttp","setLoading","_useState3","_useState4","setError","request","useCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","wrap","_context","prev","next","undefined","fetch","sent","ok","Error","status","json","abrupt","t0","message","stop","_x","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformAllCharacters","getCharacterByName","_callee2","_context2","_ref3","_callee3","_context3","_transformCharacter","_x2","getAllComics","_ref4","_callee4","_args4","_context4","_transformComics","_ref5","_callee5","_context5","_x3","char","slice","path","extension","homepage","urls","wiki","comics","items","_comics$textObjects$","textObjects","prices"],"sourceRoot":""}